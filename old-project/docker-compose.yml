version: '3.8'

services:
  # Python FastF1 Backend
  python-backend:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    container_name: f1-python-backend
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - FLASK_PORT=5001
      - CACHE_DIR=/app/cache
    volumes:
      - f1_cache:/app/cache
      - f1_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Node.js API Gateway
  node-backend:
    build:
      context: ./backend-node
      dockerfile: Dockerfile
    container_name: f1-node-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - PYTHON_API_URL=http://python-backend:5001
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      python-backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  react-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:3001/api
        - REACT_APP_WS_URL=ws://localhost:3001
    container_name: f1-react-frontend
    ports:
      - "3000:80"
    depends_on:
      - node-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  f1_cache:
    driver: local
  f1_logs:
    driver: local

networks:
  default:
    driver: bridge